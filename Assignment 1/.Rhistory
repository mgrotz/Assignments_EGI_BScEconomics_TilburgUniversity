geom_line(linetype = 'dashed', data=sim3_E, aes(x = year, y = y, color = 'red')) +
geom_line(data=sim3_RR, aes(x = year, y = y, color = 'red')) +
labs(y = "Log(GDPpc)", title = "GDPpc as a Function of Time", subtitle = "For simulations 1 - 3") +
scale_y_continuous(trans = "log10")
ggsave("sim4_yhat.png", width = 8, height = 5)
ggplot(size = 1.25) +
geom_line(data=sim1, aes(x = year, y = y)) +
geom_line(linetype = 'dashed', data=sim2_E, aes(x = year, y = y, color = 'blue')) +
geom_line(data=sim2_RR, aes(x = year, y = y, color = 'blue')) +
geom_line(linetype = 'dashed', data=sim3_E, aes(x = year, y = y, color = 'red')) +
geom_line(data=sim3_RR, aes(x = year, y = y, color = 'red')) +
labs(y = "y", title = "GDPpc as a Function of Time", subtitle = "For simulations 1 - 3") +
scale_y_continuous(trans = "log10")
ggsave("sim4_yhat.png", width = 8, height = 5)
ggplot(size = 1.25) +
geom_line(data=sim1, aes(x = year, y = y)) +
geom_line(linetype = 'dashed', data=sim2_E, aes(x = year, y = y), color = 'blue') +
geom_line(data=sim2_RR, aes(x = year, y = y), color = 'blue') +
geom_line(linetype = 'dashed', data=sim3_E, aes(x = year, y = y), color = 'red') +
geom_line(data=sim3_RR, aes(x = year, y = y), color = 'red') +
labs(y = "y", title = "GDPpc as a Function of Time", subtitle = "For simulations 1 - 3") +
scale_y_continuous(trans = "log10")
ggsave("sim4_yhat.png", width = 8, height = 5)
ggplot(size = 1.25) +
geom_line(data=sim1, aes(x = year, y = y)) +
geom_line(linetype = 'dashed', data=sim2_E, aes(x = year, y = y), color = 'blue') +
geom_line(data=sim2_RR, aes(x = year, y = y), color = 'blue') +
geom_line(linetype = 'dashed', data=sim3_E, aes(x = year, y = y), color = 'red') +
geom_line(data=sim3_RR, aes(x = year, y = y), color = 'red') +
labs(y = "y", title = "GDPpc as a Function of Time", subtitle = "For simulations 1 - 3") +
scale_y_continuous(trans = "log10")
ggsave("sim4_yhat.png", width = 8, height = 5)
ggplot(size = 1.25, alpha = .8) +
geom_line(data=sim1, aes(x = year, y = y)) +
geom_line(linetype = 'dashed', data=sim2_E, aes(x = year, y = y), color = 'blue') +
geom_line(data=sim2_RR, aes(x = year, y = y), color = 'blue') +
geom_line(linetype = 'dashed', data=sim3_E, aes(x = year, y = y), color = 'red') +
geom_line(data=sim3_RR, aes(x = year, y = y), color = 'red') +
labs(y = "y", title = "GDPpc as a Function of Time", subtitle = "For simulations 1 - 3") +
scale_y_continuous(trans = "log10")
ggsave("sim4_yhat.png", width = 8, height = 5)
library(ggpmisc)
ggplot(data = sim1_graph, aes(x = year, y = yhat)) +
geom_line(color = 'blue') +
labs(title = "Growth Rate of GDPpc as a function of time", subtitle = "From 2020 - 2100", x = "Year", y = expression(hat(y)))
ggsave("sim1_yhat.png", width = 8, height = 5)
library(ggpmisc)
ggplot(data = sim1_graph, aes(x = year, y = yhat)) +
geom_line(color = 'blue') +
labs(title = "Growth Rate of GDP per capita as a function of time", subtitle = "From 2020 - 2100", x = "Year", y = expression(hat(y)))
ggsave("sim1_yhat.png", width = 8, height = 5)
### Expected [E] ###
pi_sim3 <- rep(0, 81)
pi_sim3[2:32] <- seq( 0.050,0.20, by=0.005)
pi_sim3[33:81] <- 0.20
sim3_E <- data.frame(year = 2020:2100,
L = L_0,
K = K_0,
A = A_0,
yhat = NA,
pi = pi_sim3)
sim3_E <- sim3_E %>%
mutate(L = L_0*exp(n*(year-2020)))
sim3_E <- sim3_E %>%
mutate(Y = K_0^alpha*(A*L_0)^(1-alpha),
y = K_0^alpha*(A*L_0)^(1-alpha)/L_0)
for (i in 2:nrow(sim3_E)) {
sim3_E$A[i] <- sim3_E$A[i-1]*exp(g)*(1-sim3_E$pi[i]*theta)
sim3_E$K[i] <- (1-delta)*sim3_E$K[i-1] + s*sim3_E$Y[i-1]
sim3_E$Y[i] <- sim3_E$K[i]^alpha*(sim3_E$L[i]*sim3_E$A[i])^(1-alpha)
sim3_E$y[i] <- sim3_E$Y[i]/sim3_E$L[i]
sim3_E$yhat[i] <- log(sim3_E$y[i]/sim3_E$y[i-1])
}
sim3_E <- sim3_E%>%
mutate_if(is.numeric, round, digits= 3)
### Random realisation [RR] ###
set.seed(420)
W_sim3 <- as.integer(runif(length(2020:2100)) < pi_sim3)
sim3_RR <- data.frame(year = 2020:2100,
W = W_sim3,
L = L_0,
K = K_0,
A = A_0,
yhat = NA)
sim3_RR <- sim3_RR %>%
mutate(L = L_0*exp(n*(year-2020)))
sim3_RR <- sim3_RR %>%
mutate( Y = K_0^alpha*(A*L_0)^(1-alpha),
y = K_0^alpha*(A*L_0)^(1-alpha)/L_0)
for (i in 2:nrow(sim3_RR)) {
sim3_RR$A[i] <- sim3_RR$A[i-1]*exp(g)*(1-sim3_RR$W[i]*theta)
sim3_RR$K[i] <- (1-delta)*sim3_RR$K[i-1] + s*sim3_RR$Y[i-1]
sim3_RR$Y[i] <- sim3_RR$K[i]^alpha*(sim3_RR$L[i]*sim3_RR$A[i])^(1-alpha)
sim3_RR$y[i] <- sim3_RR$Y[i]/sim3_RR$L[i]
sim3_RR$yhat[i] <- log(sim3_RR$y[i]/sim3_RR$y[i-1])
}
sim3_RR <- sim3_RR%>%
mutate_if(is.numeric, round, digits= 3)
s_b <- .02
theta_l <- .01
theta_u <- .05
B_0 <- 0
sim4 <- data.frame(year = 2020:2100,
W = W_sim3,
L = L_0,
K = K_0,
A = A_0,
yhat = NA,
B = B_0,
Y_sim3 = sim3_RR$Y,
D = NA)
sim4 <- sim4 %>%
mutate(L = L_0*exp(n*(year-2020)))
sim4 <- sim4 %>%
mutate( Y = K_0^alpha*(A*L_0)^(1-alpha),
y =Y/L_0,
C = (1-s-s_b)*Y,
C_sim3 = (1-s)*Y_sim3,
C_over_Csim3 = C/C_sim3)
for (i in 2:nrow(sim4)) {
sim4$B[i] <- sim4$B[i-1] + s_b*sim4$Y[i-1] - delta * sim4$B[i-1]
sim4$D[i] <- theta_l + (theta_u - theta_l)*exp(-.1*sim4$B[i]/sim4$A[i-1])
sim4$A[i] <- sim4$A[i-1]*exp(g)*(1-sim4$W[i]*sim4$D[i])
sim4$K[i] <- (1-delta)*sim4$K[i-1] + s*sim4$Y[i-1]
sim4$Y[i] <- sim4$K[i]^alpha*(sim4$L[i]*sim4$A[i])^(1-alpha)
sim4$C[i] <- (1 - s - s_b)*sim4$Y[i]
sim4$y[i] <- sim4$Y[i]/sim4$L[i]
sim4$yhat[i] <- log(sim4$y[i]/sim4$y[i-1])
sim4$C_over_Csim3[i] <- sim4$C[i]/sim4$C_sim3[i]
}
sim4 <- sim4%>%
mutate_if(is.numeric, round, digits= 3)
ggplot(data = sim4) +
geom_line(aes(x = year, y = C_over_Csim3))
ggplot(size = 1.25, alpha = .8) +
geom_line(data=sim1, aes(x = year, y = y)) +
geom_line(linetype = 'dashed', data=sim2_E, aes(x = year, y = y), color = 'blue') +
geom_line(data=sim2_RR, aes(x = year, y = y), color = 'blue') +
geom_line(linetype = 'dashed', data=sim3_E, aes(x = year, y = y), color = 'red') +
geom_line(data=sim3_RR, aes(x = year, y = y), color = 'red') +
labs(y = "y", title = "GDPpc as a Function of Time", subtitle = "For simulations 1 - 3") +
scale_y_continuous(trans = "log10")
ggsave("sim4_yhat.png", width = 8, height = 5)
ggplot(size = 1.25, alpha = .8) +
geom_line(data=sim1, aes(x = year, y = y)) +
geom_line(linetype = 'dashed', data=sim2_E, aes(x = year, y = y), color = 'blue') +
geom_line(data=sim2_RR, aes(x = year, y = y), color = 'blue') +
geom_line(linetype = 'dashed', data=sim3_E, aes(x = year, y = y), color = 'red') +
geom_line(data=sim3_RR, aes(x = year, y = y), color = 'red') +
labs(y = "y", title = "GDPpc as a Function of Time", subtitle = "For simulations 1 - 3") +
scale_y_continuous(trans = "log10") +
labs(color = "Legend")
library(ggpmisc)
ggplot(data = sim1_graph, aes(x = year, y = yhat)) +
geom_line(color = 'blue') +
labs(title = "Growth Rate of GDP per capita as a function of time", subtitle = "From 2020 - 2100", x = "Year", y = expression(hat(y)))
ggsave("sim1_yhat.png", width = 8, height = 5)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# Parameters
s = .25
delta = .04
alpha = .33
n = .03
g = .02
# y_sim1 in 2017 USD (PPP), K_sim1 in mill 2017 USD (PPP), A_sim1 in index
L_0 = 45.0
K_0 = 1075795.25
A_0 = 10862.74
sim1 <- data.frame(year = 2020:2100,
L = L_0,
K_sim1 = K_0,
A_sim1 = A_0,
yhat_sim1 = NA,
Y_sim1 = K_0^alpha*(A_0*L_0)^(1-alpha),
y_sim1 = K_0^alpha*(A_0*L_0)^(1-alpha)/L_0)
# Start calculating values
sim1 <- sim1 %>%
mutate(L = L_0*exp(n*(year-2020)))
for (i in 2:nrow(sim1)) {
sim1$A_sim1[i] <- sim1$A_sim1[i-1]*exp(g)
sim1$K_sim1[i] <- (1-delta)*sim1$K_sim1[i-1] + s*sim1$Y_sim1[i-1]
sim1$Y_sim1[i] <- sim1$K_sim1[i]^alpha*(sim1$L[i]*sim1$A_sim1[i])^(1-alpha)
sim1$y_sim1[i] <- sim1$Y_sim1[i]/sim1$L[i]
sim1$yhat_sim1[i] <- log(sim1$y_sim1[i]/sim1$y_sim1[i-1])}
sim1 <- rename(sim1, K = K_sim1, A= A_sim1, yhat = yhat_sim1, Y= Y_sim1, y= y_sim1)
sim1_graph <- sim1
sim1 <- sim1%>%
mutate_if(is.numeric, round, digits= 3)
# Renaming
library(ggpmisc)
ggplot(data = sim1_graph, aes(x = year, y = yhat)) +
geom_line(color = 'blue') +
labs(title = "Growth Rate of GDP per capita as a function of time", subtitle = "From 2020 - 2100", x = "Year", y = expression(hat(y)))
ggsave("sim1_yhat.png", width = 8, height = 5)
set.seed(420)
pi <- 0.05
theta <- 0.05
year <- c(2020:2100)
W_sim2 <- as.integer(lapply(runif(length(year)), function(x) ifelse(x<pi, 1, 0)))
### Expected [E] ###
sim2_E <- data.frame(year = 2020:2100,
W = W_sim2,
L = L_0,
K_sim2 = K_0,
A_sim2 = A_0,
yhat_sim2 = NA,
pi = pi)
sim2_E <- sim2_E %>%
mutate(L = L_0*exp(n*(year-2020)))
sim2_E <- sim2_E %>%
mutate(Y_sim2 = K_0^alpha*(A_sim2*L_0)^(1-alpha),
y_sim2 = K_0^alpha*(A_sim2*L_0)^(1-alpha)/L_0)
for (i in 2:nrow(sim2_E)) {
sim2_E$A_sim2[i] <- sim2_E$A_sim2[i-1]*exp(g)*(1-sim2_E$pi[i]*theta)
sim2_E$K_sim2[i] <- (1-delta)*sim2_E$K_sim2[i-1] + s*sim2_E$Y_sim2[i-1]
sim2_E$Y_sim2[i] <- sim2_E$K_sim2[i]^alpha*(sim2_E$L[i]*sim2_E$A_sim2[i])^(1-alpha)
sim2_E$y_sim2[i] <- sim2_E$Y_sim2[i]/sim2_E$L[i]
sim2_E$yhat_sim2[i] <- log(sim2_E$y_sim2[i]/sim2_E$y_sim2[i-1])}
sim2_E <- rename(sim2_E, K = K_sim2, A= A_sim2, yhat = yhat_sim2, Y= Y_sim2, y= y_sim2)
sim2_E <- sim2_E%>%
mutate_if(is.numeric, round, digits= 3)
### Random realisation [RR] ###
sim2_RR <- data.frame(year = 2020:2100,
W = W_sim2,
L = L_0,
K_sim2 = K_0,
A_sim2 = A_0,
yhat_sim2 = NA)
sim2_RR <- sim2_RR %>%
mutate(L = L_0*exp(n*(year-2020)))
sim2_RR <- sim2_RR %>%
mutate( Y_sim2 = K_0^alpha*(A_sim2*L_0)^(1-alpha),
y_sim2 = K_0^alpha*(A_sim2*L_0)^(1-alpha)/L_0)
for (i in 2:nrow(sim2_RR)) {
sim2_RR$A_sim2[i] <- sim2_RR$A_sim2[i-1]*exp(g)*(1-(sim2_RR$W[i]*theta))
sim2_RR$K_sim2[i] <- (1-delta)*sim2_RR$K_sim2[i-1] + s*sim2_RR$Y_sim2[i-1]
sim2_RR$Y_sim2[i] <- sim2_RR$K_sim2[i]^alpha*(sim2_RR$L[i]*sim2_RR$A_sim2[i])^(1-alpha)
sim2_RR$y_sim2[i] <- sim2_RR$Y_sim2[i]/sim2_RR$L[i]
sim2_RR$yhat_sim2[i] <- log(sim2_RR$y_sim2[i]/sim2_RR$y_sim2[i-1])}
sim2_RR <-rename(sim2_RR, K = K_sim2, A= A_sim2, yhat = yhat_sim2, Y= Y_sim2, y= y_sim2)
sim2_RR <- sim2_RR%>%
mutate_if(is.numeric, round, digits= 3)
### Expected [E] ###
pi_sim3 <- rep(0, 81)
pi_sim3[2:32] <- seq( 0.050,0.20, by=0.005)
pi_sim3[33:81] <- 0.20
sim3_E <- data.frame(year = 2020:2100,
L = L_0,
K = K_0,
A = A_0,
yhat = NA,
pi = pi_sim3)
sim3_E <- sim3_E %>%
mutate(L = L_0*exp(n*(year-2020)))
sim3_E <- sim3_E %>%
mutate(Y = K_0^alpha*(A*L_0)^(1-alpha),
y = K_0^alpha*(A*L_0)^(1-alpha)/L_0)
for (i in 2:nrow(sim3_E)) {
sim3_E$A[i] <- sim3_E$A[i-1]*exp(g)*(1-sim3_E$pi[i]*theta)
sim3_E$K[i] <- (1-delta)*sim3_E$K[i-1] + s*sim3_E$Y[i-1]
sim3_E$Y[i] <- sim3_E$K[i]^alpha*(sim3_E$L[i]*sim3_E$A[i])^(1-alpha)
sim3_E$y[i] <- sim3_E$Y[i]/sim3_E$L[i]
sim3_E$yhat[i] <- log(sim3_E$y[i]/sim3_E$y[i-1])
}
sim3_E <- sim3_E%>%
mutate_if(is.numeric, round, digits= 3)
### Random realisation [RR] ###
set.seed(420)
W_sim3 <- as.integer(runif(length(2020:2100)) < pi_sim3)
sim3_RR <- data.frame(year = 2020:2100,
W = W_sim3,
L = L_0,
K = K_0,
A = A_0,
yhat = NA)
sim3_RR <- sim3_RR %>%
mutate(L = L_0*exp(n*(year-2020)))
sim3_RR <- sim3_RR %>%
mutate( Y = K_0^alpha*(A*L_0)^(1-alpha),
y = K_0^alpha*(A*L_0)^(1-alpha)/L_0)
for (i in 2:nrow(sim3_RR)) {
sim3_RR$A[i] <- sim3_RR$A[i-1]*exp(g)*(1-sim3_RR$W[i]*theta)
sim3_RR$K[i] <- (1-delta)*sim3_RR$K[i-1] + s*sim3_RR$Y[i-1]
sim3_RR$Y[i] <- sim3_RR$K[i]^alpha*(sim3_RR$L[i]*sim3_RR$A[i])^(1-alpha)
sim3_RR$y[i] <- sim3_RR$Y[i]/sim3_RR$L[i]
sim3_RR$yhat[i] <- log(sim3_RR$y[i]/sim3_RR$y[i-1])
}
sim3_RR <- sim3_RR%>%
mutate_if(is.numeric, round, digits= 3)
s_b <- .02
theta_l <- .01
theta_u <- .05
B_0 <- 0
sim4 <- data.frame(year = 2020:2100,
W = W_sim3,
L = L_0,
K = K_0,
A = A_0,
yhat = NA,
B = B_0,
Y_sim3 = sim3_RR$Y,
D = NA)
sim4 <- sim4 %>%
mutate(L = L_0*exp(n*(year-2020)))
sim4 <- sim4 %>%
mutate( Y = K_0^alpha*(A*L_0)^(1-alpha),
y =Y/L_0,
C = (1-s-s_b)*Y,
C_sim3 = (1-s)*Y_sim3,
C_over_Csim3 = C/C_sim3)
for (i in 2:nrow(sim4)) {
sim4$B[i] <- sim4$B[i-1] + s_b*sim4$Y[i-1] - delta * sim4$B[i-1]
sim4$D[i] <- theta_l + (theta_u - theta_l)*exp(-.1*sim4$B[i]/sim4$A[i-1])
sim4$A[i] <- sim4$A[i-1]*exp(g)*(1-sim4$W[i]*sim4$D[i])
sim4$K[i] <- (1-delta)*sim4$K[i-1] + s*sim4$Y[i-1]
sim4$Y[i] <- sim4$K[i]^alpha*(sim4$L[i]*sim4$A[i])^(1-alpha)
sim4$C[i] <- (1 - s - s_b)*sim4$Y[i]
sim4$y[i] <- sim4$Y[i]/sim4$L[i]
sim4$yhat[i] <- log(sim4$y[i]/sim4$y[i-1])
sim4$C_over_Csim3[i] <- sim4$C[i]/sim4$C_sim3[i]
}
sim4 <- sim4%>%
mutate_if(is.numeric, round, digits= 3)
ggplot(data = sim4) +
geom_line(aes(x = year, y = C_over_Csim3))
set.seed(420)
pi <- 0.05
theta <- 0.05
year <- c(2020:2100)
W_sim2 <- as.integer(lapply(runif(length(year)), function(x) ifelse(x<pi, 1, 0)))
### Expected [E] ###
sim2_E <- data.frame(year = 2020:2100,
W = W_sim2,
L = L_0,
K_sim2 = K_0,
A_sim2 = A_0,
yhat_sim2 = NA,
pi = pi)
sim2_E <- sim2_E %>%
mutate(L = L_0*exp(n*(year-2020)))
sim2_E <- sim2_E %>%
mutate(Y_sim2 = K_0^alpha*(A_sim2*L_0)^(1-alpha),
y_sim2 = K_0^alpha*(A_sim2*L_0)^(1-alpha)/L_0)
for (i in 2:nrow(sim2_E)) {
sim2_E$A_sim2[i] <- sim2_E$A_sim2[i-1]*exp(g)*(1-sim2_E$pi[i]*theta)
sim2_E$K_sim2[i] <- (1-delta)*sim2_E$K_sim2[i-1] + s*sim2_E$Y_sim2[i-1]
sim2_E$Y_sim2[i] <- sim2_E$K_sim2[i]^alpha*(sim2_E$L[i]*sim2_E$A_sim2[i])^(1-alpha)
sim2_E$y_sim2[i] <- sim2_E$Y_sim2[i]/sim2_E$L[i]
sim2_E$yhat_sim2[i] <- log(sim2_E$y_sim2[i]/sim2_E$y_sim2[i-1])}
sim2_E <- rename(sim2_E, K = K_sim2, A= A_sim2, yhat = yhat_sim2, Y= Y_sim2, y= y_sim2)
sim2_E <- sim2_E%>%
mutate_if(is.numeric, round, digits= 3)
### Random realisation [RR] ###
sim2_RR <- data.frame(year = 2020:2100,
W = W_sim2,
L = L_0,
K_sim2 = K_0,
A_sim2 = A_0,
yhat_sim2 = NA)
sim2_RR <- sim2_RR %>%
mutate(L = L_0*exp(n*(year-2020)))
sim2_RR <- sim2_RR %>%
mutate( Y_sim2 = K_0^alpha*(A_sim2*L_0)^(1-alpha),
y_sim2 = K_0^alpha*(A_sim2*L_0)^(1-alpha)/L_0)
for (i in 2:nrow(sim2_RR)) {
sim2_RR$A_sim2[i] <- sim2_RR$A_sim2[i-1]*exp(g)*(1-(sim2_RR$W[i]*theta))
sim2_RR$K_sim2[i] <- (1-delta)*sim2_RR$K_sim2[i-1] + s*sim2_RR$Y_sim2[i-1]
sim2_RR$Y_sim2[i] <- sim2_RR$K_sim2[i]^alpha*(sim2_RR$L[i]*sim2_RR$A_sim2[i])^(1-alpha)
sim2_RR$y_sim2[i] <- sim2_RR$Y_sim2[i]/sim2_RR$L[i]
sim2_RR$yhat_sim2[i] <- log(sim2_RR$y_sim2[i]/sim2_RR$y_sim2[i-1])}
sim2_RR <-rename(sim2_RR, K = K_sim2, A= A_sim2, yhat = yhat_sim2, Y= Y_sim2, y= y_sim2)
sim2_RR <- sim2_RR%>%
mutate_if(is.numeric, round, digits= 3)
# Parameters
s = .25
delta = .04
alpha = .33
n = .03
g = .02
# y_sim1 in 2017 USD (PPP), K_sim1 in mill 2017 USD (PPP), A_sim1 in index
L_0 = 45.0
K_0 = 1075795.25
A_0 = 10862.74
sim1 <- data.frame(year = 2020:2100,
L = L_0,
K_sim1 = K_0,
A_sim1 = A_0,
yhat_sim1 = NA,
Y_sim1 = K_0^alpha*(A_0*L_0)^(1-alpha),
y_sim1 = K_0^alpha*(A_0*L_0)^(1-alpha)/L_0)
# Start calculating values
sim1 <- sim1 %>%
mutate(L = L_0*exp(n*(year-2020)))
for (i in 2:nrow(sim1)) {
sim1$A_sim1[i] <- sim1$A_sim1[i-1]*exp(g)
sim1$K_sim1[i] <- (1-delta)*sim1$K_sim1[i-1] + s*sim1$Y_sim1[i-1]
sim1$Y_sim1[i] <- sim1$K_sim1[i]^alpha*(sim1$L[i]*sim1$A_sim1[i])^(1-alpha)
sim1$y_sim1[i] <- sim1$Y_sim1[i]/sim1$L[i]
sim1$yhat_sim1[i] <- log(sim1$y_sim1[i]/sim1$y_sim1[i-1])}
sim1 <- rename(sim1, K = K_sim1, A= A_sim1, yhat = yhat_sim1, Y= Y_sim1, y= y_sim1)
sim1_graph <- sim1
sim1 <- sim1%>%
mutate_if(is.numeric, round, digits= 3)
# Renaming
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, )
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y)
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y) %>%
pivot_longer(names_to = "simulation")
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y) %>%
pivot_longer(cols = 2:6, names_to = "simulation")
View(data_figure2)
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y) %>%
pivot_longer(cols = 2:6, names_to = "source") %>%
mutate(expected = ifelse(source %in% c(sim2_E ,sim3_E), 1, 0), simulation = ifelse(source == sim1, "sim1", ifelse(source %in% c("sim2_E", "sim2_RR"), "sim2", "sim3"))))
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y) %>%
pivot_longer(cols = 2:6, names_to = "source") %>%
mutate(expected = ifelse(source %in% c(sim2_E ,sim3_E), 1, 0), simulation = ifelse(source == sim1, "sim1", ifelse(source %in% c("sim2_E", "sim2_RR"), "sim2", "sim3")))
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y) %>%
pivot_longer(cols = 2:6, names_to = "source") %>%
mutate(expected = ifelse(source %in% c("sim2_E" ,"sim3_E"), 1, 0), simulation = ifelse(source == "sim1", "sim1", ifelse(source %in% c("sim2_E", "sim2_RR"), "sim2", "sim3")))
ggplot(data = data_figure2, aes = )
ggplot(size = 1.25, alpha = .8) +
geom_line(data=sim1, aes(x = year, y = y)) +
geom_line(linetype = 'dashed', data=sim2_E, aes(x = year, y = y), color = 'blue') +
geom_line(data=sim2_RR, aes(x = year, y = y), color = 'blue') +
geom_line(linetype = 'dashed', data=sim3_E, aes(x = year, y = y), color = 'red') +
geom_line(data=sim3_RR, aes(x = year, y = y), color = 'red') +
labs(y = "y", title = "GDPpc as a Function of Time", subtitle = "For simulations 1 - 3") +
scale_y_continuous(trans = "log10") +
labs(color = "Legend")
ggsave("sim4.png", width = 8, height = 5)
ggplot(data = data_figure2, aes = (color = simulation, linetype = expected))
ggplot(data = data_figure2, aes(color = simulation, linetype = expected))
ggplot(data = data_figure2, aes(x = year, y = value ,color = simulation, linetype = expected))
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y) %>%
pivot_longer(cols = 2:6, names_to = "source") %>%
mutate(expected = ifelse(source %in% c("sim2_E" ,"sim3_E"), T, F), simulation = ifelse(source == "sim1", "sim1", ifelse(source %in% c("sim2_E", "sim2_RR"), "sim2", "sim3")))
ggplot(data = data_figure2, aes(x = year, y = value, color = simulation, linetype = expected))
ggplot(data = data_figure2, aes(x = year, y = value, color = simulation, linetype = expected)) +
geom_line()
ggplot(data = data_figure2, aes(x = year, y = value, color = simulation, linetype = expected)) +
geom_line() +
scale_y_continuous(trans = "log10")
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y) %>%
pivot_longer(cols = 2:6, names_to = "source") %>%
mutate(source = levels(source) ,
expected = ifelse(source %in% c("sim2_E" ,"sim3_E"), T, F),
simulation = ifelse(source == "sim1", "sim1", ifelse(source %in% c("sim2_E", "sim2_RR"), "sim2", "sim3")))
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y) %>%
pivot_longer(cols = 2:6, names_to = "source") %>%
mutate(source = levels(source) ,
expected = ifelse(source %in% c("sim2_E" ,"sim3_E"), T, F),
simulation = ifelse(source == "sim1", "sim1", ifelse(source %in% c("sim2_E", "sim2_RR"), "sim2", "sim3")))
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y) %>%
pivot_longer(cols = 2:6, names_to = "source") %>%
mutate(expected = ifelse(source %in% c("sim2_E" ,"sim3_E"), T, F),
simulation = ifelse(source == "sim1", "sim1", ifelse(source %in% c("sim2_E", "sim2_RR"), "sim2", "sim3")),
source = levels(source))
ggplot(data = data_figure2, aes(x = year, y = value, color = source, linetype = source)) +
geom_line() +
scale_color_manual(name = "",
labels = c("Simulation 1", "Simulation 2 (expected)", "Simulation 2 (realised)", "Simulation 3 (expected)", "Simulation 3 (realised"),
values = c("black", "blue", "blue", "red", "red"))
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y) %>%
pivot_longer(cols = 2:6, names_to = "source") %>%
mutate(expected = ifelse(source %in% c("sim2_E" ,"sim3_E"), T, F),
simulation = ifelse(source == "sim1", "sim1", ifelse(source %in% c("sim2_E", "sim2_RR"), "sim2", "sim3")),
source = levels(source))
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y) %>%
pivot_longer(cols = 2:6, names_to = "source") %>%
mutate(expected = ifelse(source %in% c("sim2_E" ,"sim3_E"), T, F),
simulation = ifelse(source == "sim1", "sim1", ifelse(source %in% c("sim2_E", "sim2_RR"), "sim2", "sim3"))))
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y) %>%
pivot_longer(cols = 2:6, names_to = "source") %>%
mutate(expected = ifelse(source %in% c("sim2_E" ,"sim3_E"), T, F),
simulation = ifelse(source == "sim1", "sim1", ifelse(source %in% c("sim2_E", "sim2_RR"), "sim2", "sim3")))
ggplot(data = data_figure2, aes(x = year, y = value, color = source, linetype = source)) +
geom_line() +
scale_color_manual(name = "",
labels = c("Simulation 1", "Simulation 2 (expected)", "Simulation 2 (realised)", "Simulation 3 (expected)", "Simulation 3 (realised"),
values = c("black", "blue", "blue", "red", "red"))
ggplot(data = data_figure2, aes(x = year, y = value, color = source, linetype = source)) +
geom_line() +
scale_color_manual(name = "",
labels = c("Simulation 1", "Simulation 2 (expected)", "Simulation 2 (realised)", "Simulation 3 (expected)", "Simulation 3 (realised"),
values = c("black", "blue", "blue", "red", "red")) +
scale_y_continuous(trans = "log10")
ggplot(data = data_figure2, aes(x = year, y = value, color = source, linetype = source)) +
geom_line() +
scale_color_manual(name = "",
labels = c("Simulation 1", "Simulation 2 (expected)", "Simulation 2 (realised)", "Simulation 3 (expected)", "Simulation 3 (realised"),
values = c("black", "blue", "blue", "red", "red")) +
scale_linetype_manual(labels = c("Simulation 1", "Simulation 2 (expected)", "Simulation 2 (realised)", "Simulation 3 (expected)", "Simulation 3 (realised"),
values = c("solid", "dashed", "solid", "dashed", "solid"))
ggplot(data = data_figure2, aes(x = year, y = value, color = source, linetype = source)) +
geom_line() +
scale_color_manual(name = "",
labels = c("Simulation 1", "Simulation 2 (expected)", "Simulation 2 (realised)", "Simulation 3 (expected)", "Simulation 3 (realised"),
values = c("black", "blue", "blue", "red", "red")) +
scale_linetype_manual(name = "" ,
labels = c("Simulation 1", "Simulation 2 (expected)", "Simulation 2 (realised)", "Simulation 3 (expected)", "Simulation 3 (realised"),
values = c("solid", "dashed", "solid", "dashed", "solid"))
ggplot(data = data_figure2, aes(x = year, y = value, color = source, linetype = source)) +
geom_line() +
scale_color_manual(name = "",
labels = c("Simulation 1", "Simulation 2 (expected)", "Simulation 2 (realised)", "Simulation 3 (expected)", "Simulation 3 (realised"),
values = c("black", "blue", "blue", "red", "red")) +
scale_linetype_manual(name = "" ,
labels = c("Simulation 1", "Simulation 2 (expected)", "Simulation 2 (realised)", "Simulation 3 (expected)", "Simulation 3 (realised"),
values = c("solid", "dashed", "solid", "dashed", "solid")) +
scale_y_continuous(trans = "log10")
