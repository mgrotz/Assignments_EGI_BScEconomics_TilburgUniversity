yhat_sim2 = NA,
pi = pi)
sim2_E <- sim2_E %>%
mutate(L = L_0*exp(n*(year-2020)))
sim2_E <- sim2_E %>%
mutate(Y_sim2 = K_0^alpha*(A_sim2*L_0)^(1-alpha),
y_sim2 = K_0^alpha*(A_sim2*L_0)^(1-alpha)/L_0)
for (i in 2:nrow(sim2_E)) {
sim2_E$A_sim2[i] <- sim2_E$A_sim2[i-1]*exp(g)*(1-sim2_E$pi[i]*theta)
sim2_E$K_sim2[i] <- (1-delta)*sim2_E$K_sim2[i-1] + s*sim2_E$Y_sim2[i-1]
sim2_E$Y_sim2[i] <- sim2_E$K_sim2[i]^alpha*(sim2_E$L[i]*sim2_E$A_sim2[i])^(1-alpha)
sim2_E$y_sim2[i] <- sim2_E$Y_sim2[i]/sim2_E$L[i]
sim2_E$yhat_sim2[i] <- log(sim2_E$y_sim2[i]/sim2_E$y_sim2[i-1])}
sim2_E <- rename(sim2_E, K = K_sim2, A= A_sim2, yhat = yhat_sim2, Y= Y_sim2, y= y_sim2)
### Random realisation [RR] ###
sim2_RR <- data.frame(year = 2020:2100,
W = W_sim2,
L = L_0,
K_sim2 = K_0,
A_sim2 = A_0,
yhat_sim2 = NA)
sim2_RR <- sim2_RR %>%
mutate(L = L_0*exp(n*(year-2020)))
sim2_RR <- sim2_RR %>%
mutate( Y_sim2 = K_0^alpha*(A_sim2*L_0)^(1-alpha),
y_sim2 = K_0^alpha*(A_sim2*L_0)^(1-alpha)/L_0)
for (i in 2:nrow(sim2_RR)) {
sim2_RR$A_sim2[i] <- sim2_RR$A_sim2[i-1]*exp(g)*(1-(sim2_RR$W[i]*theta))
sim2_RR$K_sim2[i] <- (1-delta)*sim2_RR$K_sim2[i-1] + s*sim2_RR$Y_sim2[i-1]
sim2_RR$Y_sim2[i] <- sim2_RR$K_sim2[i]^alpha*(sim2_RR$L[i]*sim2_RR$A_sim2[i])^(1-alpha)
sim2_RR$y_sim2[i] <- sim2_RR$Y_sim2[i]/sim2_RR$L[i]
sim2_RR$yhat_sim2[i] <- log(sim2_RR$y_sim2[i]/sim2_RR$y_sim2[i-1])}
sim2_RR <-rename(sim2_RR, K = K_sim2, A= A_sim2, yhat = yhat_sim2, Y= Y_sim2, y= y_sim2)
### Expected [E] ###
pi_sim3 <- rep(0, 81)
pi_sim3[2:32] <- seq( 0.050,0.20, by=0.005)
pi_sim3[33:81] <- 0.20
sim3_E <- data.frame(year = 2020:2100,
L = L_0,
K = K_0,
A = A_0,
yhat = NA,
pi = pi_sim3)
sim3_E <- sim3_E %>%
mutate(L = L_0*exp(n*(year-2020)))
sim3_E <- sim3_E %>%
mutate(Y = K_0^alpha*(A*L_0)^(1-alpha),
y = K_0^alpha*(A*L_0)^(1-alpha)/L_0)
for (i in 2:nrow(sim3_E)) {
sim3_E$A[i] <- sim3_E$A[i-1]*exp(g)*(1-sim3_E$pi[i]*theta)
sim3_E$K[i] <- (1-delta)*sim3_E$K[i-1] + s*sim3_E$Y[i-1]
sim3_E$Y[i] <- sim3_E$K[i]^alpha*(sim3_E$L[i]*sim3_E$A[i])^(1-alpha)
sim3_E$y[i] <- sim3_E$Y[i]/sim3_E$L[i]
sim3_E$yhat[i] <- log(sim3_E$y[i]/sim3_E$y[i-1])
}
### Random realisation [RR] ###
set.seed(420)
W_sim3 <- as.integer(runif(length(2020:2100)) < pi_sim3)
sim3_RR <- data.frame(year = 2020:2100,
W = W_sim3,
L = L_0,
K = K_0,
A = A_0,
yhat = NA)
sim3_RR <- sim3_RR %>%
mutate(L = L_0*exp(n*(year-2020)))
sim3_RR <- sim3_RR %>%
mutate( Y = K_0^alpha*(A*L_0)^(1-alpha),
y = K_0^alpha*(A*L_0)^(1-alpha)/L_0)
for (i in 2:nrow(sim3_RR)) {
sim3_RR$A[i] <- sim3_RR$A[i-1]*exp(g)*(1-sim3_RR$W[i]*theta)
sim3_RR$K[i] <- (1-delta)*sim3_RR$K[i-1] + s*sim3_RR$Y[i-1]
sim3_RR$Y[i] <- sim3_RR$K[i]^alpha*(sim3_RR$L[i]*sim3_RR$A[i])^(1-alpha)
sim3_RR$y[i] <- sim3_RR$Y[i]/sim3_RR$L[i]
sim3_RR$yhat[i] <- log(sim3_RR$y[i]/sim3_RR$y[i-1])
}
### simulation 1 ###
sim1_graph %>%
filter(year > 2090) %>%
summarise(mean(yhat))
### Simulation 2 ###
sim2_E %>%
filter(year > 2090) %>%
summarise(mean(yhat))
### Simulation 3 ###
sim3_E %>%
filter(year > 2090) %>%
summarise(mean(yhat))
s_b <- .02
theta_l <- .01
theta_u <- .05
B_0 <- 0
sim4 <- data.frame(year = 2020:2100,
W = W_sim3,
L = L_0,
K = K_0,
A = A_0,
yhat = NA,
B = B_0,
Y_sim3 = sim3_RR$Y,
D = NA)
sim4 <- sim4 %>%
mutate(L = L_0*exp(n*(year-2020)))
sim4 <- sim4 %>%
mutate( Y = K_0^alpha*(A*L_0)^(1-alpha),
y =Y/L_0,
C = (1-s-s_b)*Y,
C_sim3 = (1-s)*Y_sim3,
C_over_Csim3 = C/C_sim3)
for (i in 2:nrow(sim4)) {
sim4$B[i] <- sim4$B[i-1] + s_b*sim4$Y[i-1] - delta * sim4$B[i-1]
sim4$D[i] <- theta_l + (theta_u - theta_l)*exp(-.1*sim4$B[i]/sim4$A[i-1])
sim4$A[i] <- sim4$A[i-1]*exp(g)*(1-sim4$W[i]*sim4$D[i])
sim4$K[i] <- (1-delta)*sim4$K[i-1] + s*sim4$Y[i-1]
sim4$Y[i] <- sim4$K[i]^alpha*(sim4$L[i]*sim4$A[i])^(1-alpha)
sim4$C[i] <- (1 - s - s_b)*sim4$Y[i]
sim4$y[i] <- sim4$Y[i]/sim4$L[i]
sim4$yhat[i] <- log(sim4$y[i]/sim4$y[i-1])
sim4$C_over_Csim3[i] <- sim4$C[i]/sim4$C_sim3[i]
}
ggplot(data = sim4) +
geom_line(aes(x = year, y = C_over_Csim3)) +
labs(x = "Year", y = "Ratio of Consumption in Sim4/Sim3", title = "Consumption per capita in simulation 4 \nover consumption per capita in simulation 3", subtitle = "From 2020 - 2100")
ggsave("sim4_consumption.png", width = 8, height = 5)
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y) %>%
pivot_longer(cols = 2:6, names_to = "source") %>%
mutate(expected = ifelse(source %in% c("sim2_E" ,"sim3_E"), T, F),
simulation = ifelse(source == "sim1", "sim1", ifelse(source %in% c("sim2_E", "sim2_RR"), "sim2", "sim3")))
ggplot(data = data_figure2, aes(x = year, y = value, color = source, linetype = source)) +
geom_line() +
scale_color_manual(name = "",
labels = c("Simulation 1", "Simulation 2 (expected)", "Simulation 2 (realised)", "Simulation 3 (expected)", "Simulation 3 (realised)"),
values = c("black", "blue", "blue", "red", "red")) +
scale_linetype_manual(name = "" ,
labels = c("Simulation 1", "Simulation 2 (expected)", "Simulation 2 (realised)", "Simulation 3 (expected)", "Simulation 3 (realised)"),
values = c("solid", "dashed", "solid", "dashed", "solid")) +
scale_y_continuous(trans = "log") +
annotation_logticks() +
labs(x = "Year", y = "y", title = "GDP per capita over time in Simulation 2 and 3 (both expected and realised)", subtitle = "From 2020 - 2100")
ggsave("sim4.png", width = 8, height = 5)
ggplot() +
geom_line(data=sim4, aes(x = year, y = C_over_Csim3), size = 1.25) +
labs(y = "Ratio of Consumption in Sim4/Sim3", title = "Consumption Ratio in Sim4/Sim3")
library(writexl)
write_xlsx(list(Simulation1= sim1, Simulation2E= sim2_E, Simulation2RR= sim2_RR, Simulation3E= sim3_E, Simulation3RR= sim3_RR, simulation4 = sim4), col_names = TRUE, "EGI_Assignment1_NuurVdVelGrotz.xlsx")
View(data_figure2)
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y)
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y) %>%
pivot_longer(cols = 2:6, names_to = "source") %>%
mutate(expected = ifelse(source %in% c("sim2_E" ,"sim3_E"), T, F),
simulation = ifelse(source == "sim1", "sim1", ifelse(source %in% c("sim2_E", "sim2_RR"), "sim2", "sim3")))
ggplot(data = data_figure2, aes(x = year, y = value, color = source, linetype = source)) +
geom_line() +
scale_color_manual(name = "",
labels = c("Simulation 1", "Simulation 2 (expected)", "Simulation 2 (realised)", "Simulation 3 (expected)", "Simulation 3 (realised)"),
values = c("black", "blue", "blue", "red", "red")) +
scale_linetype_manual(name = "" ,
labels = c("Simulation 1", "Simulation 2 (expected)", "Simulation 2 (realised)", "Simulation 3 (expected)", "Simulation 3 (realised)"),
values = c("solid", "dashed", "solid", "dashed", "solid")) +
scale_y_continuous(trans = "log") +
annotation_logticks() +
labs(x = "Year", y = "y", title = "GDP per capita over time in Simulation 2 and 3 (both expected and realised)", subtitle = "From 2020 - 2100")
ggsave("sim4.png", width = 8, height = 5)
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y) %>%
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y)
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y)
data_figure2 <- data.frame(year = sim1$year, sim1 = sim1_graph$y, sim2_E = sim2_E$y, sim3_E = sim3_E$y, sim2_RR = sim2_RR$y, sim3_RR = sim3_RR$y) %>%
pivot_longer(cols = 2:6, names_to = "source") %>%
mutate(expected = ifelse(source %in% c("sim2_E" ,"sim3_E"), T, F),
simulation = ifelse(source == "sim1", "sim1", ifelse(source %in% c("sim2_E", "sim2_RR"), "sim2", "sim3")))
ggplot(data = data_figure2, aes(x = year, y = value, color = source, linetype = source)) +
geom_line() +
scale_color_manual(name = "",
labels = c("Simulation 1", "Simulation 2 (expected)", "Simulation 2 (realised)", "Simulation 3 (expected)", "Simulation 3 (realised)"),
values = c("black", "blue", "blue", "red", "red")) +
scale_linetype_manual(name = "" ,
labels = c("Simulation 1", "Simulation 2 (expected)", "Simulation 2 (realised)", "Simulation 3 (expected)", "Simulation 3 (realised)"),
values = c("solid", "dashed", "solid", "dashed", "solid")) +
scale_y_continuous(trans = "log") +
annotation_logticks() +
labs(x = "Year", y = "y", title = "GDP per capita over time in Simulation 2 and 3 (both expected and realised)", subtitle = "From 2020 - 2100")
ggsave("sim4.png", width = 8, height = 5)
---
title: 'Economic Growth and Institutions: Assignment 2'
author: "Mathieu Van der Vel, Abdirahman Nuur and Maximilian Grotz"
date: "1 4 2022"
output: pdf_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F)
```
# Setup
```{r}
library(tidyverse)
```
# Simulation 1: No abatment effort, `r s_m` = 0
Notes to Mathieu:
1. I simplifed the paramters seeing the `.` as a decimal point
2. Minor modifications to the forLikmulas like ` y`instead of `Y`, and the some equations
```{r}
# Setting Parameters
sm <- 0
L_0 <- 7.9
K_0 <- 170
M_0 <- 500
A_0 <- 7
sk <- 0.25
delta <- 0.04
alpha <- 0.33
n <- 0.015
g <- 0.02
x <- 0.7
epsilon <- 0.5
w <- 0.05
k_greek <- 0.75
theta1 <- 0.05
theta2 <- 2
# Creating Data Frame Structure
sim1 <- data.frame(year = 2020:2100,
L = L_0,
K = K_0,
A = A_0,
sm = sm,
Z = (K_0^alpha)*((A_0*L_0)^(1-alpha)),
m = NA,
M = M_0,
T = 1 + (M_0^k_greek/1000),
D = NA,
Y_sim1 = NA,
y_sim1 = NA,
yhat_sim1 = NA,
c_sim1 = NA,
chat_sim1 = NA)
# Start Calculating Values
sim1 <- sim1 %>%
mutate(L = L_0*exp(n*(year-2020)),
A = A_0*exp(g*(year-2020)),
m = x*((1-(sm/w))^epsilon)*Z[1],
D = 1 - (1/(1+theta1*T[1]^theta2)))
sim1 <- sim1 %>%
mutate(Y_sim1 = (1-D[1])*(Z[1]))
sim1 <- sim1 %>%
mutate(y_sim1 = Y_sim1[1]/L_0,
c_sim1 = (1-sk-sm)*y_sim1[1])
for (i in 2:nrow(sim1)){
sim1$K[i] <- (1-delta)*sim1$K[i-1] + sk*sim1$Y_sim1[i-1]
sim1$M[i] <- sim1$M[i-1] + sim1$m[i-1]
sim1$Z[i] <- (sim1$K[i]^alpha)*(sim1$A[i]*sim1$L[i])^(1-alpha)
sim1$m[i] <- x*(1-(sm/w))^epsilon*sim1$Z[i]
sim1$T[i] <- 1 + ((sim1$M[i]^k_greek)/1000)
sim1$D[i] <- 1 - (1/(1+theta1*sim1$T[i]^theta2))
sim1$Y_sim1[i] <- (1-sim1$D[i])*(sim1$Z[i])
sim1$y_sim1[i] <- sim1$Y_sim1[i]/sim1$L[i]
sim1$c_sim1[i] <- (1-sk-sm)*sim1$y_sim1[i]
sim1$yhat_sim1[i] <- log(sim1$y_sim1[i]/sim1$y_sim1[i-1])
sim1$chat_sim1[i] <- log(sim1$c_sim1[i]/sim1$c_sim1[i-1])
}
```
# Simulation 2: Full abatment effort, `r s_m` = `r w`
```{r}
# Setting Parameters
w <- 0.05
sm <- w
L_0 <- 7.9
K_0 <- 170
M_0 <- 500
A_0 <- 7
sk <- 0.25
delta <- 0.04
alpha <- 0.33
n <- 0.015
g <- 0.02
x <- 0.7
epsilon <- 0.5
k_greek <- 0.75
theta1 <- 0.05
theta2 <- 2
# Creating Data Frame Structure
sim2 <- data.frame(year = 2020:2100,
L = L_0,
K = K_0,
A = A_0,
sm = sm,
Z = (K_0^alpha)*((A_0*L_0)^(1-alpha)),
m = NA,
M = M_0,
T = 1 + (M_0^k_greek/1000),
D = NA,
Y_sim2 = NA,
y_sim2 = NA,
yhat_sim2 = NA,
c_sim2 = NA,
chat_sim2 = NA)
# Start Calculating Values
sim2 <- sim2 %>%
mutate(L = L_0*exp(n*(year-2020)),
A = A_0*exp(g*(year-2020)),
m = x*((1-(sm/w))^epsilon)*Z[1],
D = 1 - (1/(1+theta1*T[1]^theta2)))
sim2 <- sim2 %>%
mutate(Y_sim2 = (1-D[1])*(Z[1]))
sim2 <- sim2 %>%
mutate(y_sim2 = Y_sim2[1]/L_0,
c_sim2 = (1-sk-sm)*y_sim2[1])
for (i in 2:nrow(sim2)){
sim2$K[i] <- (1-delta)*sim2$K[i-1] + sk*sim2$Y_sim2[i-1]
sim2$M[i] <- sim2$M[i-1] + sim2$m[i-1]
sim2$Z[i] <- (sim2$K[i]^alpha)*(sim2$A[i]*sim2$L[i])^(1-alpha)
sim2$m[i] <- x*(1-(sm/w))^epsilon*sim2$Z[i]
sim2$T[i] <- 1 + ((sim2$M[i]^k_greek)/1000)
sim2$D[i] <- 1 - (1/(1+theta1*sim2$T[i]^theta2))
sim2$Y_sim2[i] <- (1-sim2$D[i])*(sim2$Z[i])
sim2$y_sim2[i] <- sim2$Y_sim2[i]/sim2$L[i]
sim2$c_sim2[i] <- (1-sk-sm)*sim2$y_sim2[i]
sim2$yhat_sim2[i] <- log(sim2$y_sim2[i]/sim2$y_sim2[i-1])
sim2$chat_sim2[i] <- log(sim2$c_sim2[i]/sim2$c_sim2[i-1])
}
```
## R2: Question g) compare between yhat and chat for sim2. Describe and explain
# Third simulation
```{r}
# Setting Parameters
w <- 0.05
sm <-  0.025           #sm(t=0), the new sm is added in the dataframe
L_0 <- 7.9
K_0 <- 170
M_0 <- 500
A_0 <- 7
sk <- 0.25
delta <- 0.04
alpha <- 0.33
n <- 0.015
g <- 0.02
x <- 0.7
epsilon <- 0.5
n_greek <- 0.02 #for sm
k_greek <- 0.75
theta1 <- 0.05
theta2 <- 2
# Creating Data Frame Structure
sim3 <- data.frame(year = 2020:2100,
L = L_0,
K = K_0,
A = A_0,
sm = NA,
Z = (K_0^alpha)*((A_0*L_0)^(1-alpha)),
m = NA,
M = M_0,
T = 1 + (M_0^k_greek/1000),
D = NA,
Y_sim3 = NA,
y_sim3 = NA,
yhat_sim3 = NA,
c_sim3 = NA,
chat_sim3 = NA)
# Start Calculating Values
sim3 <- sim3 %>%
mutate(L = L_0*exp(n*(year-2020)),
A = A_0*exp(g*(year-2020)),
sm = w/ (1+ exp(n_greek* (2020- year))),
m = x*((1-(sm/w))^epsilon)*Z[1],
D = 1 - (1/(1+theta1*T[1]^theta2)))
sim3 <- sim3 %>%
mutate(Y_sim3 = (1-D[1])*(Z[1]))
sim3 <- sim3 %>%
mutate(y_sim3 = Y_sim3[1]/L_0,
c_sim3 = (1-sk-sm)*y_sim3[1])
for (i in 2:nrow(sim3)){
sim3$K[i] <- (1-delta)*sim3$K[i-1] + sk*sim3$Y_sim3[i-1]
sim3$M[i] <- sim3$M[i-1] + sim3$m[i-1]
sim3$Z[i] <- (sim3$K[i]^alpha)*(sim3$A[i]*sim3$L[i])^(1-alpha)
sim3$m[i] <- x*(1-(sim3$sm[i]/w))^epsilon*sim3$Z[i]
sim3$T[i] <- 1 + ((sim3$M[i]^k_greek)/1000)
sim3$D[i] <- 1 - (1/(1+theta1*sim3$T[i]^theta2))
sim3$Y_sim3[i] <- (1-sim3$D[i])*(sim3$Z[i])
sim3$y_sim3[i] <- sim3$Y_sim3[i]/sim3$L[i]
sim3$c_sim3[i] <- (1-sk-sim3$sm[i])*sim3$y_sim3[i]
sim3$yhat_sim3[i] <- log(sim3$y_sim3[i]/sim3$y_sim3[i-1])
sim3$chat_sim3[i] <- log(sim3$c_sim3[i]/sim3$c_sim3[i-1])
}
```
# Evaluation analysis
```{r}
# Step 1: Have a df of each simulation's consumption per capita
cpc_df <- data.frame(year= 2020:2100, c1= sim1$c_sim1, c2= sim2$c_sim2, c3= sim3$c_sim3)
# Step 2: Cacluate the normal cpc difference between sim1&sim2, sim1&sim3 in the cpc_df, call them Current Value difference (CV diff)
cpc_df <- cpc_df%>%
mutate(
CV_diff_c2_c1 = c2 -c1,
CV_diff_c3_c1= c3 - c1,)
# Step 3: Caclulate the PV of  CV_diff_c1_c2, and  CV_diff_c1_c3
#PV[x(t)]= exp(-r*(year-2020))*(CV_diff)
r <- 0.03
cpc_df <- cpc_df%>%
mutate(
PV_CV_diff_c2_c1= exp(-r*(2021-2020))*(c2[1]-c1[1]),
PV_CV_diff_c3_c1= exp(-r*(2021-2020))*(c3[1]-c1[1]))
for(i  in 1:nrow(cpc_df)){
cpc_df$PV_CV_diff_c2_c1[i]<- exp(-r*(cpc_df$year[i]-2020))*(cpc_df$c2[i]-cpc_df$c1[i])
cpc_df$PV_CV_diff_c3_c1[i]<- exp(-r*(cpc_df$year[i]-2020))*(cpc_df$c3[i]-cpc_df$c1[i])}
# Step 4: Calculate the CPV for each PV_diff
cpc_df <- cpc_df%>%
mutate(
CPV_PV_c2_c1 = cumsum(PV_CV_diff_c2_c1),
CPV_PV_c3_c1 = cumsum(PV_CV_diff_c3_c1))
```
#Creating the Excel File:
```{r}
library(writexl)
sim1_rounded <- round(sim1, digits = 4)
sim2_rounded <- round(sim2, digits = 4)
sim3_rounded <- round(sim3, digits = 4)
cpc_df_rounded <- round(cpc_df, digits = 4)
write_xlsx(list(Simulation1 = sim1_rounded, Simulation2 = sim2_rounded, Simulation3 = sim3_rounded, Evaluation = cpc_df_rounded), col_names = TRUE, "EGI_Assignment2_NuurVdVelGrotz.xlsx")
```
data_fig_G <- data.frame(year= sim1_rounded$year, sim1_yhat = sim1_rounded$yhat_sim1, sim1_chat = sim1_rounded$chat_sim1, sim2_yhat = sim2_rounded$yhat_sim2, sim2_chat = sim2_rounded$chat_sim2)
View(data_fig_G)
data_fig_G <- data.frame(year= sim1_rounded$year, sim1_yhat = sim1_rounded$yhat_sim1, sim1_chat = sim1_rounded$chat_sim1, sim2_yhat = sim2_rounded$yhat_sim2, sim2_chat = sim2_rounded$chat_sim2)%>%
pivot_longer(2:5, names_to = "source")
data_fig_G <- data.frame(year= sim1_rounded$year, sim1_yhat = sim1_rounded$yhat_sim1, sim1_chat = sim1_rounded$chat_sim1, sim2_yhat = sim2_rounded$yhat_sim2, sim2_chat = sim2_rounded$chat_sim2)%>%
pivot_longer(2:5, names_to = "source")%>%
mutate(GDP_growth = ifelse(source%in% c("sim1_yhat", "sim2_yhat"), T, F),
simulation = ifelse(source == "sim1", "sim1", ifelse(source %in% c("sim2_yhat", "sim2_chat"), "sim2", "sim3"))))
data_fig_G <- data.frame(year= sim1_rounded$year, sim1_yhat = sim1_rounded$yhat_sim1, sim1_chat = sim1_rounded$chat_sim1, sim2_yhat = sim2_rounded$yhat_sim2, sim2_chat = sim2_rounded$chat_sim2)%>%
pivot_longer(2:5, names_to = "source")%>%
mutate(GDP_growth = ifelse(source%in% c("sim1_yhat", "sim2_yhat"), T, F))
data_fig_G <- data.frame(year= sim1_rounded$year, sim1_yhat = sim1_rounded$yhat_sim1, sim1_chat = sim1_rounded$chat_sim1, sim2_yhat = sim2_rounded$yhat_sim2, sim2_chat = sim2_rounded$chat_sim2)%>%
pivot_longer(2:5, names_to = "source")%>%
mutate(GDP_growth = ifelse(source%in% c("sim1_yhat", "sim2_yhat"), T, F),
simulation = ifelse(source%in% c("sim1_yhat", "sim1_chat"), "sim1", "sim2"))
data_fig_G <- data.frame(year= sim1_rounded$year, sim1_yhat = sim1_rounded$yhat_sim1, sim1_chat = sim1_rounded$chat_sim1, sim2_yhat = sim2_rounded$yhat_sim2, sim2_chat = sim2_rounded$chat_sim2)%>%
pivot_longer(2:5, names_to = "source")%>%
mutate(GDP_growth = ifelse(source%in% c("sim1_yhat", "sim2_yhat"), T, F),
simulation = ifelse(source%in% c("sim1_yhat", "sim1_chat"), "sim1", "sim2"))
ggplot(data_fig_G, mapping = aes(x= year, y= value, color=simulation, linetype= GDP_growth))+
#For sim1
geom_line()
data_fig_G <- data.frame(year= sim1_rounded$year, sim1_yhat = sim1_rounded$yhat_sim1, sim1_chat = sim1_rounded$chat_sim1, sim2_yhat = sim2_rounded$yhat_sim2, sim2_chat = sim2_rounded$chat_sim2)%>%
pivot_longer(2:5, names_to = "source")%>%
mutate(GDP_growth = ifelse(source%in% c("sim1_yhat", "sim2_yhat"), T, F),
simulation = ifelse(source%in% c("sim1_yhat", "sim1_chat"), "sim1", "sim2"))
ggplot(data_fig_G, mapping = aes(x= year, y= value, color=simulation, linetype= source))+
#For sim1
geom_line()
View(sim1_rounded)
View(sim2)
View(sim2_rounded)
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F)
library(tidyverse)
# Setting Parameters
sm <- 0
L_0 <- 7.9
K_0 <- 170
M_0 <- 500
A_0 <- 7
sk <- 0.25
delta <- 0.04
alpha <- 0.33
n <- 0.015
g <- 0.02
x <- 0.7
epsilon <- 0.5
w <- 0.05
k_greek <- 0.75
theta1 <- 0.05
theta2 <- 2
# Creating Data Frame Structure
sim1 <- data.frame(year = 2020:2100,
L = L_0,
K = K_0,
A = A_0,
sm = sm,
Z = (K_0^alpha)*((A_0*L_0)^(1-alpha)),
m = NA,
M = M_0,
T = 1 + (M_0^k_greek/1000),
D = NA,
Y_sim1 = NA,
y_sim1 = NA,
yhat_sim1 = NA,
c_sim1 = NA,
chat_sim1 = NA)
# Start Calculating Values
sim1 <- sim1 %>%
mutate(L = L_0*exp(n*(year-2020)),
A = A_0*exp(g*(year-2020)),
m = x*((1-(sm/w))^epsilon)*Z[1],
D = 1 - (1/(1+theta1*T[1]^theta2)))
sim1 <- sim1 %>%
mutate(Y_sim1 = (1-D[1])*(Z[1]))
sim1 <- sim1 %>%
mutate(y_sim1 = Y_sim1[1]/L_0,
c_sim1 = (1-sk-sm)*y_sim1[1])
for (i in 2:nrow(sim1)){
sim1$K[i] <- (1-delta)*sim1$K[i-1] + sk*sim1$Y_sim1[i-1]
sim1$M[i] <- sim1$M[i-1] + sim1$m[i-1]
sim1$Z[i] <- (sim1$K[i]^alpha)*(sim1$A[i]*sim1$L[i])^(1-alpha)
sim1$m[i] <- x*(1-(sm/w))^epsilon*sim1$Z[i]
sim1$T[i] <- 1 + ((sim1$M[i]^k_greek)/1000)
sim1$D[i] <- 1 - (1/(1+theta1*sim1$T[i]^theta2))
sim1$Y_sim1[i] <- (1-sim1$D[i])*(sim1$Z[i])
sim1$y_sim1[i] <- sim1$Y_sim1[i]/sim1$L[i]
sim1$c_sim1[i] <- (1-sk-sm)*sim1$y_sim1[i]
sim1$yhat_sim1[i] <- log(sim1$y_sim1[i]/sim1$y_sim1[i-1])
sim1$chat_sim1[i] <- log(sim1$c_sim1[i]/sim1$c_sim1[i-1])
}
View(sim1)
#Making Graphs for First Simulation
library(ggpmisc)
ggplot(data = sim1, aes(x = year, y = yhat_sim1)) +
geom_line(color = 'blue') +
labs(title = "Growth Rate of GDP per capita as a function of time", subtitle = "From 2020 - 2100", x = "Year", y = expression(hat(y)))
